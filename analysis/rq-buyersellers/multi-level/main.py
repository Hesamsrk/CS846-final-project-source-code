import networkx as nx
import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from pyvis.network import Network

offers_path = '../../IITP-VDLand/Offers_opensea.csv'
characteristics_path = '../../IITP-VDLand/Characteristics.csv'
sales_path = '../../IITP-VDLand/Sales_opensea.csv'
sales_eth_path = '../../IITP-VDLand/Sales_ethereum.csv'


def visualize_with_pyvis(df,filename='graph.html',columns = ["from_account","to_account","weight"]):
	# Create a graph
	G = nx.DiGraph()

	# Add edges to the graph
	for index, row in df.iterrows():
		G.add_edge(row[columns[0]], row[columns[1]], weight=row[columns[2]])

	# Compute node sizes
	node_size = {}
	for node in G.nodes():
		size = sum([d['weight'] for u, v, d in G.edges(node, data=True)])
		node_size[node] = size + 20

	nx.set_node_attributes(G, node_size, 'size')

	# Plot with Pyvis
	pyvis_net = Network(height='1000px', width='100%', notebook=True, directed=False)
	pyvis_net.from_nx(G)

	for node in pyvis_net.nodes:
		node_id = node['id']
		node['title'] = node_id  # Disable node labels
		node['label'] = None  # Disable node labels

	for edge in pyvis_net.edges:
		edge['width'] = 1  # Set edge width to a constant value
		edge['length'] = 10000  # Set edge length to a constant value
		edge['color'] = 'gray'  # Set edge color to gray
		edge['curviness'] = 0  # Set edge curviness to a constant value

	pyvis_net.show('html-interactives/' + filename)


def generate_graphs():
	df1 = pd.read_csv(sales_eth_path)
	df2 = pd.read_csv(sales_path)

	edges_df1 = df1.groupby(['from_address', 'to_address']).size().reset_index(name='weight')
	edges_df2 = df2.groupby(['from_account', 'to_account']).size().reset_index(name='weight')
	dataset1 = edges_df1.sort_values(by='weight', ascending=False)
	dataset2 = edges_df2.sort_values(by='weight', ascending=False)

	sizes = [100,1000,10000]
	for size in sizes:
		filename = f"graph-ethereum-{size}.html"
		visualize_with_pyvis(dataset1.head(size),filename,columns=['from_address', 'to_address','weight'])

	for size in sizes:
		filename = f"graph-opensea-{size}.html"
		visualize_with_pyvis(dataset2.head(size),filename,columns=['from_account', 'to_account','weight'])


if __name__ == '__main__':
	# This code generates interactives HTML that is stored in html-interactives/ directory
	# The images generated by the HTML are as attached in the folder as graph_*.png
	generate_graphs()

